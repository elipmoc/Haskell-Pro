
==================== FINAL INTERFACE ====================
2017-12-05 07:02:46.4385079 UTC

interface main@main:Main 8002
  interface hash: 343d722e960c8ae5aa9a08b22a2829ba
  ABI hash: cb7e0b90e02f11fa9d2b7663ae9a679b
  export-list hash: 334872a20cf3e3f628a4c2facffb7cb2
  orphan hash: 81c1448d5c7c2fb283a05a447abeec96
  flag hash: 13db57ddb479d0258e99f007b904488e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.jqFilterParserTest
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      base-4.9.1.0* binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hjq-0.1.0.0@hjq-0.1.0.0-I1fYZknv1CrBp9KXtqZVa2 integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit 430ab81af3668b12bae4950025858f90
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit.Base f0a9278b48574d2c877b887c21718635
import  -/  HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI:Test.HUnit.Text 6753931dd2c8c4d539d7452dc50c9749
import  -/  base-4.9.1.0:Data.Either 186ef9adf6b47e24f39efe9b2e18e352
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hjq-0.1.0.0@hjq-0.1.0.0-I1fYZknv1CrBp9KXtqZVa2:Data.Hjq.Parser 173ff5981752c823656527863f21c522
304e256159a879302f8064bb48bb511c
  $s$fEqEither ::
    GHC.Classes.Eq
      (Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                  (Data.Either.$fEqEither_$c==
                     @ Data.Text.Internal.Text
                     @ Data.Hjq.Parser.JqFilter
                     Data.Hjq.Parser.$fEqJqFilter
                     Data.Text.$fEqText)
                  (Data.Either.$fEqEither_$c/=
                     @ Data.Text.Internal.Text
                     @ Data.Hjq.Parser.JqFilter
                     Data.Hjq.Parser.$fEqJqFilter
                     Data.Text.$fEqText) -}
4b1af870b89438b8d00e6006a7a2bda9
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ Data.Text.Internal.Text
                     @ Data.Hjq.Parser.JqFilter
                     Data.Hjq.Parser.$fShowJqFilter
                     Data.Text.Show.$fShowText)
                  (Data.Either.$fShowEither_$cshow
                     @ Data.Text.Internal.Text
                     @ Data.Hjq.Parser.JqFilter
                     Data.Hjq.Parser.$fShowJqFilter
                     Data.Text.Show.$fShowText)
                  Main.$s$fShowEither_$s$fShowEither_$cshowList -}
3eccd6d15cea0aee2215ea2d477c0715
  $s$fShowEither_$s$fShowEither_$cshowList ::
    [Data.Either.Either
       Data.Text.Internal.Text Data.Hjq.Parser.JqFilter]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Data.Either.Either
                              Data.Text.Internal.Text Data.Hjq.Parser.JqFilter])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ Data.Text.Internal.Text
                      @ Data.Hjq.Parser.JqFilter
                      Data.Hjq.Parser.$fShowJqFilter
                      Data.Text.Show.$fShowText
                      Data.Either.$fShowEither1)
                   eta
                   eta1) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
0baf978ddddef63fa26c1ee24847263e
  jqFilterParserTest :: Test.HUnit.Base.Test
  {- Strictness: m2,
     Unfolding: (Test.HUnit.Base.TestList Main.jqFilterParserTest1) -}
770008af37703c540c4906a7d51df572
  jqFilterParserTest1 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   Main.jqFilterParserTest73
                   Main.jqFilterParserTest2) -}
356f04e123a75af13355d94eaca25e94
  jqFilterParserTest10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# ".fieldName[0]"#) -}
4c362a536b5184e0e69e534bb6fdb93e
  jqFilterParserTest11 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Either.Right
                   @ Data.Text.Internal.Text
                   @ Data.Hjq.Parser.JqFilter
                   Main.jqFilterParserTest12) -}
8c38eafc59ebf678951e56962222e599
  jqFilterParserTest12 :: Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.JqField
                   Main.jqFilterParserTest15
                   Main.jqFilterParserTest13) -}
34ade57121970eef1e97e93bc1a1c79e
  jqFilterParserTest13 :: Data.Hjq.Parser.JqFilter
  {- HasNoCafRefs,
     Unfolding: (Data.Hjq.Parser.JqIndex
                   Main.jqFilterParserTest14
                   Data.Hjq.Parser.JqNil) -}
f37df6b479cbe36b8a196413a7f8f380
  jqFilterParserTest14 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
567110c65b2e45c5396b728ee18137ea
  jqFilterParserTest15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "fieldName"#) -}
0b492f70b3cf7e9dc81c14f27d778f8c
  jqFilterParserTest16 ::
    GHC.Base.String
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either
                        Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                   Main.jqFilterParserTest17
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
566d53b401eadc7cc5171e73e9eb9b01
  jqFilterParserTest17 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.jqFilterParserTest18) -}
bc859b022d0dd317902803091d74e426
  jqFilterParserTest18 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.~?=3
                   Test.HUnit.Base.~?=1
                   Main.jqFilterParserTest19) -}
9ca0368b77e52dc4a52840829c8273c2
  jqFilterParserTest19 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.jqFilterParserTest27
                   Main.jqFilterParserTest20
                   GHC.Stack.Types.EmptyCallStack) -}
ee878ab3ed18c92def137e32a0fefc06
  jqFilterParserTest2 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   Main.jqFilterParserTest59
                   Main.jqFilterParserTest3) -}
c3e87a54a0258c1ecceaacf7374da288
  jqFilterParserTest20 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.jqFilterParserTest26
                   Main.jqFilterParserTest25
                   Main.jqFilterParserTest24
                   Main.jqFilterParserTest23
                   Main.jqFilterParserTest22
                   Main.jqFilterParserTest23
                   Main.jqFilterParserTest21) -}
f79cf4024989fd4b86ed2bd5698cbe82
  jqFilterParserTest21 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 117#) -}
5cdda17e3ed13fac682aa58c5a92addb
  jqFilterParserTest22 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
f1190f4412ddf5eecf47c2071b519b8d
  jqFilterParserTest23 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24#) -}
3053165b0886815f73b7ddb49786803e
  jqFilterParserTest24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Spec.hs"#) -}
de48009827286a12a931c88565d22775
  jqFilterParserTest25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
5713aa3155f8d806df22324c57160aa5
  jqFilterParserTest26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
e647d8b83aac8a1301059ce2d3cbb244
  jqFilterParserTest27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "~?="#) -}
7e6ac938bc5350661247612e7239aec5
  jqFilterParserTest28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "jqFilterParser test 5"#) -}
8daeecaa71ceb0022bc3faeefbe2622d
  jqFilterParserTest29 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   Main.jqFilterParserTest44
                   Main.jqFilterParserTest30) -}
edf322e83baff556e3e4b0ab32ea14f2
  jqFilterParserTest3 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   Main.jqFilterParserTest45
                   Main.jqFilterParserTest4) -}
d3e1a220f6a7a41ac03c26334ebee858
  jqFilterParserTest30 :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase Main.jqFilterParserTest31) -}
6d6c8423b3b57623c44998c93b83ae68
  jqFilterParserTest31 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.jqFilterParserTest37
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.jqFilterParserTest34
                   Main.jqFilterParserTest32) -}
586a14c39c9e215c4be5c6f0c37b5358
  jqFilterParserTest32 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.parserJqFilter
                   Main.jqFilterParserTest33) -}
ed11ed0bcc0195cca4d4814c8d5aa475
  jqFilterParserTest33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# ".[0].fieldName"#) -}
6cf58a27cfd272133af396113a971d59
  jqFilterParserTest34 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Either.Right
                   @ Data.Text.Internal.Text
                   @ Data.Hjq.Parser.JqFilter
                   Main.jqFilterParserTest35) -}
8b3bfe6f98ae0f240377c331542dc2a0
  jqFilterParserTest35 :: Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.JqIndex
                   Main.jqFilterParserTest14
                   Main.jqFilterParserTest36) -}
105a65c570457b8313c7dac32b0d89d4
  jqFilterParserTest36 :: Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.JqField
                   Main.jqFilterParserTest15
                   Data.Hjq.Parser.JqNil) -}
12746d053611426eb317105e2e42c4cc
  jqFilterParserTest37 ::
    GHC.Base.String
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either
                        Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                   Main.jqFilterParserTest38
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
9304aa507b34bf45ecafba9d13dfc694
  jqFilterParserTest38 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.jqFilterParserTest39) -}
bed3bf7abee780a600d29b9b02f2a883
  jqFilterParserTest39 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.~?=3
                   Test.HUnit.Base.~?=1
                   Main.jqFilterParserTest40) -}
7574ef8d80b4ed9bb377bd4da92966fe
  jqFilterParserTest4 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   Main.jqFilterParserTest29
                   Main.jqFilterParserTest5) -}
3f9235a6ba7a69246b22256a183b8770
  jqFilterParserTest40 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.jqFilterParserTest27
                   Main.jqFilterParserTest41
                   GHC.Stack.Types.EmptyCallStack) -}
e41a20471f3f48deefa4bb1a24c184ac
  jqFilterParserTest41 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.jqFilterParserTest26
                   Main.jqFilterParserTest25
                   Main.jqFilterParserTest24
                   Main.jqFilterParserTest43
                   Main.jqFilterParserTest22
                   Main.jqFilterParserTest43
                   Main.jqFilterParserTest42) -}
f36a52658d85aa3d17b23b5e6768123d
  jqFilterParserTest42 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 118#) -}
4b93170088d549bcf98f2fd82fc1a099
  jqFilterParserTest43 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23#) -}
954693fd4ba1c9f57711a2c2fd80abb6
  jqFilterParserTest44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "jqFilterParser test 4"#) -}
e9517b290a0a53a5710cfe540d1d1e2e
  jqFilterParserTest45 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   Main.jqFilterParserTest58
                   Main.jqFilterParserTest46) -}
512802bee07be1fe1b1826caa3928a5b
  jqFilterParserTest46 :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase Main.jqFilterParserTest47) -}
e3a39c9103a3d787fe208f0413674206
  jqFilterParserTest47 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.jqFilterParserTest51
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.jqFilterParserTest50
                   Main.jqFilterParserTest48) -}
9b2098b65136cf9bd474bc2f0bf23d02
  jqFilterParserTest48 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.parserJqFilter
                   Main.jqFilterParserTest49) -}
0989664ee258285096f7f62be02a58bd
  jqFilterParserTest49 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# ".fieldName"#) -}
3ac38d2458c4912273c983dea557a819
  jqFilterParserTest5 :: [Test.HUnit.Base.Test]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   Main.jqFilterParserTest6
                   (GHC.Types.[] @ Test.HUnit.Base.Test)) -}
22173b49805a0efad7fae7067c31bd4a
  jqFilterParserTest50 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Either.Right
                   @ Data.Text.Internal.Text
                   @ Data.Hjq.Parser.JqFilter
                   Main.jqFilterParserTest36) -}
c1c82d2460272b7c36cc0fdfa99ba3c6
  jqFilterParserTest51 ::
    GHC.Base.String
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either
                        Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                   Main.jqFilterParserTest52
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
38f19997782ec7206d8eacac96439159
  jqFilterParserTest52 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.jqFilterParserTest53) -}
a882609b32520a99f040927a7197ea0d
  jqFilterParserTest53 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.~?=3
                   Test.HUnit.Base.~?=1
                   Main.jqFilterParserTest54) -}
9de55c68be07fb6d136b955f6b3bc362
  jqFilterParserTest54 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.jqFilterParserTest27
                   Main.jqFilterParserTest55
                   GHC.Stack.Types.EmptyCallStack) -}
0209ff046363265da1e4a0f53ba7adf2
  jqFilterParserTest55 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.jqFilterParserTest26
                   Main.jqFilterParserTest25
                   Main.jqFilterParserTest24
                   Main.jqFilterParserTest57
                   Main.jqFilterParserTest22
                   Main.jqFilterParserTest57
                   Main.jqFilterParserTest56) -}
21b45326274d7d9425686c40b1964eab
  jqFilterParserTest56 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 102#) -}
840b8a8f666a3962fecdd1dc4c4246aa
  jqFilterParserTest57 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 22#) -}
6839f5514c65fef99392355c08198500
  jqFilterParserTest58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "jqFilterParser test 3"#) -}
1aa9ee9dbad704450c6cccce8f78ba79
  jqFilterParserTest59 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   Main.jqFilterParserTest72
                   Main.jqFilterParserTest60) -}
b62bb918603773520ae300fcc8f5bd22
  jqFilterParserTest6 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   Main.jqFilterParserTest28
                   Main.jqFilterParserTest7) -}
7b95d312c0cbd18675f75eab4ccd506e
  jqFilterParserTest60 :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase Main.jqFilterParserTest61) -}
609e9b88c4aec6c068e6fe62e26ee201
  jqFilterParserTest61 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.jqFilterParserTest65
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.jqFilterParserTest64
                   Main.jqFilterParserTest62) -}
7fc0ae8d51bac153fdd72eddac4ca482
  jqFilterParserTest62 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.parserJqFilter
                   Main.jqFilterParserTest63) -}
5ce68ad1e01c60c8a07d5885ece9d433
  jqFilterParserTest63 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# ".[0]"#) -}
d78f32dea22705264e488cb8f964270c
  jqFilterParserTest64 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Data.Text.Internal.Text
                   @ Data.Hjq.Parser.JqFilter
                   Main.jqFilterParserTest13) -}
71f745f151fbb1d6f0f2225b356a3ab7
  jqFilterParserTest65 ::
    GHC.Base.String
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either
                        Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                   Main.jqFilterParserTest66
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
2fa78287d13a99b60cad1997ce5c9cea
  jqFilterParserTest66 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.jqFilterParserTest67) -}
5a67754c8e1f3a6205a029e29bbe0e57
  jqFilterParserTest67 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.~?=3
                   Test.HUnit.Base.~?=1
                   Main.jqFilterParserTest68) -}
f44573d67504c4b1d4f419d661a488f6
  jqFilterParserTest68 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.jqFilterParserTest27
                   Main.jqFilterParserTest69
                   GHC.Stack.Types.EmptyCallStack) -}
99f8852ce7d776ab45838ae3416e11b5
  jqFilterParserTest69 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.jqFilterParserTest26
                   Main.jqFilterParserTest25
                   Main.jqFilterParserTest24
                   Main.jqFilterParserTest71
                   Main.jqFilterParserTest22
                   Main.jqFilterParserTest71
                   Main.jqFilterParserTest70) -}
0a80003896058a2350ceab79cbbb71b8
  jqFilterParserTest7 :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase Main.jqFilterParserTest8) -}
142dc5239d512463e8b585dc305f1d1b
  jqFilterParserTest70 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 86#) -}
214cd5590eb4b366c6ffee04477dac96
  jqFilterParserTest71 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 21#) -}
691ea5b2fa0cd1300ef9da18319a9920
  jqFilterParserTest72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "jqFilterParser test 2"#) -}
38c960a52bea1720944352c80e3ef94e
  jqFilterParserTest73 :: Test.HUnit.Base.Test
  {- Strictness: m3,
     Unfolding: (Test.HUnit.Base.TestLabel
                   Main.jqFilterParserTest87
                   Main.jqFilterParserTest74) -}
1ada80febe5dfcacb1e702d34994094a
  jqFilterParserTest74 :: Test.HUnit.Base.Test
  {- Strictness: m1,
     Unfolding: (Test.HUnit.Base.TestCase Main.jqFilterParserTest75) -}
7053520f96eb4a4eff816e813de3d9a9
  jqFilterParserTest75 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.jqFilterParserTest79
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.jqFilterParserTest78
                   Main.jqFilterParserTest76) -}
f6bb364e7444fb96ac5822a03cef083e
  jqFilterParserTest76 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.parserJqFilter
                   Main.jqFilterParserTest77) -}
7bbf4fe0746436e41073cff7f0c54cdf
  jqFilterParserTest77 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "."#) -}
7ee41c4d1b467b680e2fd8e67934a960
  jqFilterParserTest78 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- HasNoCafRefs,
     Unfolding: (Data.Either.Right
                   @ Data.Text.Internal.Text
                   @ Data.Hjq.Parser.JqFilter
                   Data.Hjq.Parser.JqNil) -}
eeab55771a0cca41274d072322787a0b
  jqFilterParserTest79 ::
    GHC.Base.String
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Data.Either.Either
         Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either
                        Data.Text.Internal.Text Data.Hjq.Parser.JqFilter)
                   Main.jqFilterParserTest80
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
31246be2ccf981ce03630e4005dc593b
  jqFilterParserTest8 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.jqFilterParserTest16
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.jqFilterParserTest11
                   Main.jqFilterParserTest9) -}
0d5c26f95de6260eb5c07a741c6f6a12
  jqFilterParserTest80 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.jqFilterParserTest81) -}
63cd9830971ee0b4e86adb17cd1e1727
  jqFilterParserTest81 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.~?=3
                   Test.HUnit.Base.~?=1
                   Main.jqFilterParserTest82) -}
0f1cea450157ecdedf6a2bc689364a14
  jqFilterParserTest82 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.jqFilterParserTest27
                   Main.jqFilterParserTest83
                   GHC.Stack.Types.EmptyCallStack) -}
bf105524e3a4a5915c92ebc8d15d2162
  jqFilterParserTest83 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.jqFilterParserTest26
                   Main.jqFilterParserTest25
                   Main.jqFilterParserTest24
                   Main.jqFilterParserTest86
                   Main.jqFilterParserTest85
                   Main.jqFilterParserTest86
                   Main.jqFilterParserTest84) -}
41010834bb747451d503a0d1b65a431c
  jqFilterParserTest84 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 70#) -}
cc9b7aa4b7369d7806f8f9cb6f1ca7f5
  jqFilterParserTest85 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 36#) -}
2d40174fc26daa28554ef023c744f761
  jqFilterParserTest86 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 20#) -}
4e872a7aa3dc2c9858f0e994b76aeebc
  jqFilterParserTest87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "jqFilterParser test 1"#) -}
b377ef03011df88bded5b8703c95316f
  jqFilterParserTest9 ::
    Data.Either.Either Data.Text.Internal.Text Data.Hjq.Parser.JqFilter
  {- Unfolding: (Data.Hjq.Parser.parserJqFilter
                   Main.jqFilterParserTest10) -}
87d318c9608d98e982a544ed6a7c9903
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
e1d402c2dec7f7a46ed736059f654ebf
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Test.HUnit.Text.runTestTT3 of ww { Test.HUnit.Text.PutText ww1 ww2 ->
                 case Test.HUnit.Text.$wrunTestText
                        @ GHC.Types.Int
                        ww1
                        ww2
                        Main.main4
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) counts' ds ->
                 case ds of wild1 { GHC.Types.I# ds2 ->
                 case ds2 of ds3 {
                   DEFAULT
                   -> case GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ Test.HUnit.Base.Counts
                             Main.main2
                             ipv
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   0# -> (# ipv, GHC.Tuple.() #) } } } } }) -}
ae3e872adfdcf027a2673d2ce525553f
  main2 :: GHC.Exception.SomeException
  {- Unfolding: (GHC.IO.Exception.$fExceptionIOException_$ctoException
                   Main.main3) -}
f6cff754cc6dc1f89e02c82b78ac6058
  main3 :: GHC.IO.Exception.IOException
  {- Unfolding: (GHC.IO.Exception.IOError
                   (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                   GHC.IO.Exception.UserError
                   (GHC.Types.[] @ GHC.Types.Char)
                   Test.HUnit.Text.runTestTT2
                   (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                   (GHC.Base.Nothing @ GHC.IO.FilePath)) -}
187c896e3b8a62bebb1e9f1c7b73b0e1
  main4 :: Test.HUnit.Base.Test
  {- Unfolding: (Test.HUnit.Base.TestList Main.main5) -}
f319bad9c82ca3faf266cb6ab11036be
  main5 :: [Test.HUnit.Base.Test]
  {- Unfolding: (GHC.Types.:
                   @ Test.HUnit.Base.Test
                   Main.jqFilterParserTest
                   (GHC.Types.[] @ Test.HUnit.Base.Test)) -}
51bc031ce42eb4d7f46e2940f3c537c5
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
"SPEC/Main $fEqEither @ Text @ JqFilter" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                     Data.Text.Internal.Text)
                                                         ($dEq :: GHC.Classes.Eq
                                                                    Data.Hjq.Parser.JqFilter)
  Data.Either.$fEqEither @ Data.Text.Internal.Text
                         @ Data.Hjq.Parser.JqFilter
                         $dEq
                         $dEq1
  = Main.$s$fEqEither
"SPEC/Main $fShowEither @ Text @ JqFilter" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                         Data.Text.Internal.Text)
                                                           ($dShow :: GHC.Show.Show
                                                                        Data.Hjq.Parser.JqFilter)
  Data.Either.$fShowEither @ Data.Text.Internal.Text
                           @ Data.Hjq.Parser.JqFilter
                           $dShow
                           $dShow1
  = Main.$s$fShowEither
"SPEC/Main $fShowEither_$cshowList @ Text @ JqFilter" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                    Data.Text.Internal.Text)
                                                                      ($dShow :: GHC.Show.Show
                                                                                   Data.Hjq.Parser.JqFilter)
  Data.Either.$fShowEither_$cshowList @ Data.Text.Internal.Text
                                      @ Data.Hjq.Parser.JqFilter
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$s$fShowEither_$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

