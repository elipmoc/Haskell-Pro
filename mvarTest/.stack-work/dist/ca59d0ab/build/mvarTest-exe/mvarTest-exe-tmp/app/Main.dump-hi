
==================== FINAL INTERFACE ====================
2017-12-01 12:20:02.7797513 UTC

interface main@main:Main 8002
  interface hash: bb4f3cef9da30c8c1b8311aab0853856
  ABI hash: 293d2e3613944246fd796a07a3872bc3
  export-list hash: 8fb92458c1d7324d73325f1a92f8b821
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1b8b1e431a8606ef4c3c85aadceaefa0
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Concurrent e3f6962e2eee72e46a7f524818b5ed3e
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Conc.IO 130e001b62dcd16f34734f77c1912479
import  -/  base-4.9.1.0:GHC.Conc.Sync 18bcf7264dc8f03029975495d151af25
import  -/  base-4.9.1.0:GHC.MVar e5fe1554c748d101cdd97036e5438555
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
3cb67e071ec5a8b28a5e84241fca184f
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
af5b01cc409185f1aee6713ac7574e81
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMVar#
                        @ GHC.Prim.RealWorld
                        @ ()
                        s of ds { (#,#) ipv ipv1 ->
                 case GHC.Prim.fork#
                        @ (GHC.Types.IO ())
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.catch#
                           @ ()
                           @ GHC.Exception.SomeException
                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case GHC.Prim.myThreadId# s1 of ds1 { (#,#) ipv2 ipv3 ->
                            case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      (GHC.Conc.Sync.$fShowThreadId_$cshow
                                         (GHC.Conc.Sync.ThreadId ipv3))
                                      Main.main4)
                                   GHC.Types.True
                                   ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                            case {__pkg_ccall base-4.9.1.0 rtsSupportsBoundThreads GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Int# #)}
                                   GHC.Prim.realWorld# of wild { (#,#) ds3 ds4 ->
                            case ds4 of wild1 {
                              DEFAULT
                              -> case GHC.Conc.Windows.threadDelay1
                                        Main.main3
                                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                                 case GHC.Prim.putMVar#
                                        @ GHC.Prim.RealWorld
                                        @ ()
                                        ipv1
                                        GHC.Tuple.()
                                        ipv6 of s2# { DEFAULT ->
                                 (# s2#, GHC.Tuple.() #) } }
                              0#
                              -> case GHC.Prim.delay#
                                        @ GHC.Prim.RealWorld
                                        200000#
                                        ipv4 of s' { DEFAULT ->
                                 case GHC.Prim.putMVar#
                                        @ GHC.Prim.RealWorld
                                        @ ()
                                        ipv1
                                        GHC.Tuple.()
                                        s' of s2# { DEFAULT ->
                                 (# s2#, GHC.Tuple.() #) } } } } } })
                           GHC.Conc.Sync.childHandler1
                           eta)
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.takeMVar#
                        @ GHC.Prim.RealWorld
                        @ ()
                        ipv1
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv4 } } }) -}
cb16748adae93dd62653b64b6c0a539a
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Done"#) -}
ea84952fc8c0fb99f12fd31f8a5ec91e
  main3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 200000#) -}
1a05536e94b7dca362b7c297574e9f3a
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ":doing ... heavy ... task ..."#) -}
c75fdc6ad53dc7a6e07c56963b5def69
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

